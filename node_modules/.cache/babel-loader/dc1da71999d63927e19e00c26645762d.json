{"remainingRequest":"/home/mauro/fullstack/frontend/node_modules/babel-loader/lib/index.js!/home/mauro/fullstack/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mauro/fullstack/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mauro/fullstack/frontend/src/components/Noteslist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mauro/fullstack/frontend/src/components/Noteslist.vue","mtime":1605849005013},{"path":"/home/mauro/fullstack/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mauro/fullstack/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mauro/fullstack/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mauro/fullstack/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvbWF1cm8vZnVsbHN0YWNrL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE5vdGVEYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9Ob3RlRGF0YVNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIm5vdGVzLWxpc3QiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBub3RlczogW10sCiAgICAgIHRpdGxlOiAiIiwKICAgICAgaGVhZGVyczogW3sKICAgICAgICB0ZXh0OiAiVGl0dWxvIiwKICAgICAgICBhbGlnbjogInN0YXJ0IiwKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdmFsdWU6ICJ0aXRsZSIKICAgICAgfSwgewogICAgICAgIHRleHQ6ICJEZXNjcmlwY2lvbiIsCiAgICAgICAgdmFsdWU6ICJkZXNjcmlwdGlvbiIsCiAgICAgICAgc29ydGFibGU6IGZhbHNlCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiRXN0YWRvIiwKICAgICAgICB2YWx1ZTogInN0YXR1cyIsCiAgICAgICAgc29ydGFibGU6IGZhbHNlCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiQWNjaW9uZXMiLAogICAgICAgIHZhbHVlOiAiYWN0aW9ucyIsCiAgICAgICAgc29ydGFibGU6IGZhbHNlCiAgICAgIH1dCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmV0cmlldmVOb3RlczogZnVuY3Rpb24gcmV0cmlldmVOb3RlcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIE5vdGVEYXRhU2VydmljZS5nZXRBbGwoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLm5vdGVzID0gcmVzcG9uc2UuZGF0YS5tYXAoX3RoaXMuZ2V0RGlzcGxheU5vdGUpOwogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0sCiAgICByZWZyZXNoTGlzdDogZnVuY3Rpb24gcmVmcmVzaExpc3QoKSB7CiAgICAgIHRoaXMucmV0cmlldmVOb3RlcygpOwogICAgfSwKICAgIHJlbW92ZUFsbE5vdGVzOiBmdW5jdGlvbiByZW1vdmVBbGxOb3RlcygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRjb25maXJtKCfCv0VzdGEgc2VndXJvIGRlIGVsaW1pbmFyIHRvZGFzIGxhcyB0YXJlYXM/JywgewogICAgICAgICAgICAgICAgICB0aXRsZTogJ0NvbmZpcm1hcicKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMpIHsKICAgICAgICAgICAgICAgICAgTm90ZURhdGFTZXJ2aWNlLmRlbGV0ZUFsbCgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgICAgICAgIF90aGlzMi5yZWZyZXNoTGlzdCgpOwogICAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHNlYXJjaFRpdGxlOiBmdW5jdGlvbiBzZWFyY2hUaXRsZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBOb3RlRGF0YVNlcnZpY2UuZmluZEJ5VGl0bGUodGhpcy50aXRsZSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczMubm90ZXMgPSByZXNwb25zZS5kYXRhLm1hcChfdGhpczMuZ2V0RGlzcGxheU5vdGUpOwogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0sCiAgICBlZGl0Tm90ZTogZnVuY3Rpb24gZWRpdE5vdGUoaWQpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICJub3RlLWRldGFpbHMiLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgaWQ6IGlkCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBkZWxldGVOb3RlOiBmdW5jdGlvbiBkZWxldGVOb3RlKGlkLCBzdGF0dXMpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIShzdGF0dXMgPT0gIlBlbmRpZW50ZSIpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC4kY29uZmlybSgnwr9Fc3RhIHNlZ3VybyBkZSBlbGltaW5hciB1bmEgdGFyZWEgcGVuZGllbnRlPycsIHsKICAgICAgICAgICAgICAgICAgdGl0bGU6ICdDb25maXJtYXInCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKHJlcykgewogICAgICAgICAgICAgICAgICBOb3RlRGF0YVNlcnZpY2UuZGVsZXRlKGlkKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczQucmVmcmVzaExpc3QoKTsKICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA4OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIE5vdGVEYXRhU2VydmljZS5kZWxldGUoaWQpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICBfdGhpczQucmVmcmVzaExpc3QoKTsKICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldERpc3BsYXlOb3RlOiBmdW5jdGlvbiBnZXREaXNwbGF5Tm90ZShub3RlKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgaWQ6IG5vdGUuaWQsCiAgICAgICAgdGl0bGU6IG5vdGUudGl0bGUubGVuZ3RoID4gMzAgPyBub3RlLnRpdGxlLnN1YnN0cigwLCAzMCkgKyAiLi4uIiA6IG5vdGUudGl0bGUsCiAgICAgICAgZGVzY3JpcHRpb246IG5vdGUuZGVzY3JpcHRpb24sCiAgICAgICAgc3RhdHVzOiBub3RlLnB1Ymxpc2hlZCA/ICJGaW5hbGl6YWRvIiA6ICJQZW5kaWVudGUiCiAgICAgIH07CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5yZXRyaWV2ZU5vdGVzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Noteslist.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row align=\"center\" class=\"list px-3 mx-auto\">\n    <v-col cols=\"12\" md=\"8\">\n      <v-text-field v-model=\"title\" label=\"Buscar por titulo\"></v-text-field>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"4\">\n      <v-btn small @click=\"searchTitle\"> Buscar </v-btn>\n    </v-col>\n\n    <v-col cols=\"12\" sm=\"12\">\n      <v-card class=\"mx-auto\" tile>\n        <v-card-title>Tareas</v-card-title>\n\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"notes\"\n          disable-pagination\n          :hide-default-footer=\"true\"\n        >\n          <template v-slot:[`item.actions`]=\"{ item }\">\n            <v-icon small class=\"mr-2\" @click=\"editNote(item.id)\"\n              >mdi-pencil</v-icon\n            >\n            <v-icon small @click=\"deleteNote(item.id, item.status)\">mdi-delete</v-icon>\n          </template>\n        </v-data-table>\n\n        <v-card-actions v-if=\"notes.length > 0\">\n          <v-btn small color=\"error\" @click=\"removeAllNotes\">\n            Eliminar todo\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-col>\n  </v-row>\n\n</template>\n\n<script>\nimport NoteDataService from \"../services/NoteDataService\";\nexport default {\n  name: \"notes-list\",\n  data() {\n    return {\n      notes: [],\n      title: \"\",\n      headers: [\n        { text: \"Titulo\", align: \"start\", sortable: false, value: \"title\" },\n        { text: \"Descripcion\", value: \"description\", sortable: false },\n        { text: \"Estado\", value: \"status\", sortable: false },\n        { text: \"Acciones\", value: \"actions\", sortable: false },\n      ],\n    };\n  },\n  methods: {\n    retrieveNotes() {\n      NoteDataService.getAll()\n        .then((response) => {\n          this.notes = response.data.map(this.getDisplayNote);\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    refreshList() {\n      this.retrieveNotes();\n    },\n\n    async removeAllNotes() {\n       let res = await this.$confirm('¿Esta seguro de eliminar todas las tareas?', { title: 'Confirmar' })\n      if (res) {\n      NoteDataService.deleteAll()\n        .then((response) => {\n          console.log(response.data);\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n        }\n    },\n\n    searchTitle() {\n      NoteDataService.findByTitle(this.title)\n        .then((response) => {\n          this.notes = response.data.map(this.getDisplayNote);\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n   editNote(id) {\n      this.$router.push({ name: \"note-details\", params: { id: id } });\n    },\n\n    async deleteNote(id, status) {\n      if(status == \"Pendiente\"){\n      let res = await this.$confirm('¿Esta seguro de eliminar una tarea pendiente?', { title: 'Confirmar' })\n      if (res) {\n       NoteDataService.delete(id)\n          .then(() => {\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n        })\n      }\n      }else{\n          NoteDataService.delete(id)\n          .then(() => {\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n        })\n      }\n    },\n\n    getDisplayNote(note) {\n      return {\n        id: note.id,\n        title: note.title.length > 30 ? note.title.substr(0, 30) + \"...\" : note.title,\n        description: note.description,\n        status: note.published ? \"Finalizado\" : \"Pendiente\",\n      };\n    },\n  },\n  mounted() {\n    this.retrieveNotes();\n  },\n};\n</script>\n\n<style>\n.list {\n  max-width: 1500px;\n  background: #E7E7E7;\n}\n</style>"],"sourceRoot":"src/components"}]}