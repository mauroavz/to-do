{"remainingRequest":"/home/mauro/fullstack/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mauro/fullstack/frontend/src/components/note.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/mauro/fullstack/frontend/src/components/note.vue","mtime":1605651270576},{"path":"/home/mauro/fullstack/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mauro/fullstack/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mauro/fullstack/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mauro/fullstack/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mauro/fullstack/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVkaXQtZm9ybSB7CiAgbWF4LXdpZHRoOiAzMDBweDsKICBtYXJnaW46IGF1dG87Cn0K"},{"version":3,"sources":["note.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA","file":"note.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div v-if=\"currentNote\" class=\"edit-form py-3\">\n    <p class=\"headline\">Editar Nota</p>\n\n    <v-form ref=\"form\" lazy-validation>\n      <v-text-field\n        v-model=\"currentNote.title\"\n        :rules=\"[(v) => !!v || 'Title is required']\"\n        label=\"Title\"\n        required\n      ></v-text-field>\n\n      <v-text-field\n        v-model=\"currentNote.description\"\n        :rules=\"[(v) => !!v || 'Description is required']\"\n        label=\"Description\"\n        required\n      ></v-text-field>\n\n      <label><strong>Status:</strong></label>\n      {{ currentNote.published ? \"Published\" : \"Pending\" }}\n\n      <v-divider class=\"my-5\"></v-divider>\n\n      <v-btn v-if=\"currentNote.published\"\n        @click=\"updatePublished(false)\"\n        color=\"primary\" small class=\"mr-2\"\n      >\n        Anular publicación\n      </v-btn>\n\n      <v-btn v-else\n        @click=\"updatePublished(true)\"\n        color=\"primary\" small class=\"mr-2\"\n      >\n        Publicar\n      </v-btn>\n\n      <v-btn color=\"error\" small class=\"mr-2\" @click=\"deleteNote\">\n        Eliminar\n      </v-btn>\n\n      <v-btn color=\"success\" small @click=\"updateNote\">\n        Subir\n      </v-btn>\n    </v-form>\n\n    <p class=\"mt-3\">{{ message }}</p>\n  </div>\n\n  <div v-else>\n    <p>Haga clic en una nota ...</p>\n  </div>\n</template>\n\n<script>\nimport NoteDataService from \"../services/NoteDataService\";\n\nexport default {\n  name: \"note\",\n  data() {\n    return {\n      currentNote: null,\n      message: \"\",\n    };\n  },\n  methods: {\n    getNote(id) {\n      NoteDataService.get(id)\n        .then((response) => {\n          this.currentNote = response.data;\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    updatePublished(status) {\n      var data = {\n        id: this.currentNote.id,\n        title: this.currentNote.title,\n        description: this.currentNote.description,\n        published: status,\n      };\n\n      NoteDataService.update(this.currentNote.id, data)\n        .then((response) => {\n          this.currentNote.published = status;\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    updateNote() {\n      NoteDataService.update(this.currentNote.id, this.currentNote)\n        .then((response) => {\n          console.log(response.data);\n          this.message = \"¡La tarea se actualizó correctamente!\";\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    deleteNote() {\n      NoteDataService.delete(this.currentNote.id)\n        .then((response) => {\n          console.log(response.data);\n          this.$router.push({ name: \"notes\" });\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n  },\n  mounted() {\n    this.message = \"\";\n    this.getNote(this.$route.params.id);\n  },\n};\n</script>\n\n<style>\n.edit-form {\n  max-width: 300px;\n  margin: auto;\n}\n</style>"]}]}