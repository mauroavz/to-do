{"remainingRequest":"/home/mauro/fullstack/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mauro/fullstack/frontend/src/components/Noteslist.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/mauro/fullstack/frontend/src/components/Noteslist.vue","mtime":1605849005013},{"path":"/home/mauro/fullstack/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mauro/fullstack/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mauro/fullstack/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mauro/fullstack/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mauro/fullstack/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5saXN0IHsKICBtYXgtd2lkdGg6IDE1MDBweDsKICBiYWNrZ3JvdW5kOiAjRTdFN0U3Owp9Cg=="},{"version":3,"sources":["Noteslist.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA","file":"Noteslist.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-row align=\"center\" class=\"list px-3 mx-auto\">\n    <v-col cols=\"12\" md=\"8\">\n      <v-text-field v-model=\"title\" label=\"Buscar por titulo\"></v-text-field>\n    </v-col>\n\n    <v-col cols=\"12\" md=\"4\">\n      <v-btn small @click=\"searchTitle\"> Buscar </v-btn>\n    </v-col>\n\n    <v-col cols=\"12\" sm=\"12\">\n      <v-card class=\"mx-auto\" tile>\n        <v-card-title>Tareas</v-card-title>\n\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"notes\"\n          disable-pagination\n          :hide-default-footer=\"true\"\n        >\n          <template v-slot:[`item.actions`]=\"{ item }\">\n            <v-icon small class=\"mr-2\" @click=\"editNote(item.id)\"\n              >mdi-pencil</v-icon\n            >\n            <v-icon small @click=\"deleteNote(item.id, item.status)\">mdi-delete</v-icon>\n          </template>\n        </v-data-table>\n\n        <v-card-actions v-if=\"notes.length > 0\">\n          <v-btn small color=\"error\" @click=\"removeAllNotes\">\n            Eliminar todo\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-col>\n  </v-row>\n\n</template>\n\n<script>\nimport NoteDataService from \"../services/NoteDataService\";\nexport default {\n  name: \"notes-list\",\n  data() {\n    return {\n      notes: [],\n      title: \"\",\n      headers: [\n        { text: \"Titulo\", align: \"start\", sortable: false, value: \"title\" },\n        { text: \"Descripcion\", value: \"description\", sortable: false },\n        { text: \"Estado\", value: \"status\", sortable: false },\n        { text: \"Acciones\", value: \"actions\", sortable: false },\n      ],\n    };\n  },\n  methods: {\n    retrieveNotes() {\n      NoteDataService.getAll()\n        .then((response) => {\n          this.notes = response.data.map(this.getDisplayNote);\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    refreshList() {\n      this.retrieveNotes();\n    },\n\n    async removeAllNotes() {\n       let res = await this.$confirm('¿Esta seguro de eliminar todas las tareas?', { title: 'Confirmar' })\n      if (res) {\n      NoteDataService.deleteAll()\n        .then((response) => {\n          console.log(response.data);\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n        }\n    },\n\n    searchTitle() {\n      NoteDataService.findByTitle(this.title)\n        .then((response) => {\n          this.notes = response.data.map(this.getDisplayNote);\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n   editNote(id) {\n      this.$router.push({ name: \"note-details\", params: { id: id } });\n    },\n\n    async deleteNote(id, status) {\n      if(status == \"Pendiente\"){\n      let res = await this.$confirm('¿Esta seguro de eliminar una tarea pendiente?', { title: 'Confirmar' })\n      if (res) {\n       NoteDataService.delete(id)\n          .then(() => {\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n        })\n      }\n      }else{\n          NoteDataService.delete(id)\n          .then(() => {\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n        })\n      }\n    },\n\n    getDisplayNote(note) {\n      return {\n        id: note.id,\n        title: note.title.length > 30 ? note.title.substr(0, 30) + \"...\" : note.title,\n        description: note.description,\n        status: note.published ? \"Finalizado\" : \"Pendiente\",\n      };\n    },\n  },\n  mounted() {\n    this.retrieveNotes();\n  },\n};\n</script>\n\n<style>\n.list {\n  max-width: 1500px;\n  background: #E7E7E7;\n}\n</style>"]}]}